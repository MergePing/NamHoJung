<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.mergyping.post.model.dao.PostMapper">
    <resultMap id="postList" type="com.ohgiraffers.mergyping.post.model.dto.PostDTO">
        <id property="postNo" column="POST_NO"/>
        <result property="postTitle" column="POST_TITLE"/>
        <result property="postCategory" column="POST_CATEGORY"/>
        <result property="postDate" column="POST_DATE"/>
        <result property="scaryNumber" column="SCARY_NUMBER"/>
        <result property="commentNumber" column="COMMENTS_NUMBER"/>
        <result property="postFavorite" column="POST_FAVORITE"/>
    </resultMap>
    <resultMap id="selectPost" type="com.ohgiraffers.mergyping.post.model.dto.SelectPostDTO">
        <id property="postNo" column="POST_NO"/>
        <result property="postTitle" column="POST_TITLE"/>
        <result property="postContent" column="POST_CONTENTS"/>
        <result property="postCategory" column="POST_CATEGORY"/>
        <result property="postWriter" column="POST_WRITER"/>
        <result property="postDate" column="POST_DATE"/>
        <result property="scaryNumber" column="SCARY_NUMBER"/>
        <result property="notScaryNumber" column="NOT_SCARY_NUMBER"/>
        <result property="commentNumber" column="COMMENTS_NUMBER"/>
        <result property="postReport" column="POST_REPORT"/>
        <result property="postImageFirst" column="POST_IMAGE_FIRST"/>
        <result property="postImageSecond" column="POST_IMAGE_SECOND"/>
        <result property="postFavorite" column="POST_FAVORITE"/>
        <result property="scary" column="SCARY"/>
        <result property="notScary" column="NOT_SCARY"/>
    </resultMap>

    <resultMap id="mypageResultMap" type="com.ohgiraffers.mergyping.user.model.dto.MyPageDTO">
        <result property="userName" column="USER_NAME"/>
        <result property="email"  column="EMAIL"/>
        <result property="userId" column="USER_ID"/>
        <result property="userPwd" column="USER_PWD"/>
    </resultMap>
    <resultMap id="writerName" type="com.ohgiraffers.mergyping.post.model.dto.WriterNameDTO">
        <id property="userNo" column="USER_NO"/>
        <result property="postNo" column="POST_NO"/>
        <result property="level" column="LEVEL"/>
        <result property="userName" column="USER_NAME"/>
    </resultMap>

    <resultMap id="commentResultMap" type="com.ohgiraffers.mergyping.comment.model.dto.CommentDTO">
        <result property="commentNo" column="COMMENT_NO"/>
        <result property="commentContent" column="COMMENT_CONTENT"/>
        <result property="commentDate" column="COMMENT_DATE"/>
        <result property="username" column="USER_NAME"/>
        <result property="userLevel" column="LEVEL"/>
    </resultMap>


    <select id="postList" resultMap="postList">
        SELECT
        POST_NO,
        POST_TITLE,
        POST_CATEGORY,
        POST_DATE,
        SCARY_NUMBER,
        COMMENTS_NUMBER,
        POST_FAVORITE
        FROM TBL_POST
        ORDER BY POST_NO DESC;
    </select>


    <select id="postListSort" resultMap="postList">
        SELECT
        POST_NO,
        POST_TITLE,
        POST_CATEGORY,
        POST_DATE,
        SCARY_NUMBER,
        COMMENTS_NUMBER,
        POST_FAVORITE
        FROM TBL_POST
        WHERE 1=1
        <if test="category != null and category != ''">
            AND POST_CATEGORY LIKE #{category}
        </if>
        ORDER BY
        <choose>
            <when test="orderBy != null and orderBy != ''">
                ${orderBy} DESC
            </when>
            <otherwise>
                POST_NO DESC
            </otherwise>
        </choose>
        LIMIT #{offset}, #{pageSize}
    </select>



    <select id="getPostsByPage" resultMap="postList">
        SELECT
        POST_NO,
        POST_TITLE,
        POST_CATEGORY,
        POST_DATE,
        SCARY_NUMBER,
        COMMENTS_NUMBER,
        POST_FAVORITE
        FROM TBL_POST
        ORDER BY POST_NO DESC
        LIMIT #{offset}, #{pageSize};
    </select>

    <select id="getPostCount" resultType="int">
        SELECT
        COUNT(POST_NO)
        FROM TBL_POST
    </select>

    <select id="getPostsByPageSelect" resultMap="selectPost">
        SELECT
        POST_NO,
        POST_TITLE,
        POST_CATEGORY,
        POST_DATE,
        SCARY_NUMBER,
        COMMENTS_NUMBER,
        POST_FAVORITE
        FROM TBL_POST
        ORDER BY POST_DATE DESC LIMIT #{offset}, #{pageSize};
    </select>

    <select id="selectById" resultMap="selectPost">
        SELECT
        POST_NO,
        POST_TITLE,
        POST_CONTENTS,
        POST_CATEGORY,
        POST_WRITER,
        POST_DATE,
        SCARY_NUMBER,
        NOT_SCARY_NUMBER,
        COMMENTS_NUMBER,
        POST_REPORT,
        POST_IMAGE_FIRST,
        POST_IMAGE_SECOND,
        POST_FAVORITE,
        SCARY,
        NOT_SCARY
        FROM TBL_POST
        WHERE POST_NO = #{postNo};
    </select>





    <update id="updateFavoriteStatus">
        UPDATE TBL_POST
        SET POST_FAVORITE = #{isFavorite}
        WHERE POST_NO = #{postNo};
    </update>

    <update id="incrementScaryCount">
        UPDATE TBL_POST
        SET SCARY = #{isScary},
        SCARY_NUMBER = SCARY_NUMBER + 1
        WHERE POST_NO = #{postNo};
    </update>

    <update id="decrementScaryCount">
        UPDATE TBL_POST
        SET SCARY = #{isScary},
        SCARY_NUMBER = SCARY_NUMBER - 1
        WHERE POST_NO = #{postNo};
    </update>

    <update id="incrementNotScaryCount">
        UPDATE TBL_POST
        SET NOT_SCARY = #{isNotScary},
        NOT_SCARY_NUMBER = NOT_SCARY_NUMBER + 1
        WHERE POST_NO = #{postNo};
    </update>

    <update id="decrementNotScaryCount">
        UPDATE TBL_POST
        SET NOT_SCARY = #{isNotScary},
        NOT_SCARY_NUMBER = NOT_SCARY_NUMBER - 1
        WHERE POST_NO = #{postNo};
    </update>


    <select id="getScaryNumber" parameterType="int" resultType="int">
        SELECT SCARY_NUMBER
        FROM TBL_POST
        WHERE POST_NO = #{postNo}
    </select>

    <select id="getNotScaryNumber" parameterType="int" resultType="int">
        SELECT NOT_SCARY_NUMBER
        FROM TBL_POST
        WHERE POST_NO = #{postNo}
    </select>

    <insert id="insertPost" parameterType="com.ohgiraffers.mergyping.post.model.dto.SelectPostDTO">
        INSERT INTO TBL_POST (
        POST_TITLE,
        POST_CONTENTS,
        POST_CATEGORY,
        POST_WRITER,
        POST_IMAGE_FIRST,
        POST_IMAGE_SECOND
        )
        VALUES (
        #{postTitle},
        #{postContent},
        #{postCategory},
        1, <!-- 임시로 0을 사용하여 외래 키 제약을 피합니다. -->
        #{postImageFirst},
        #{postImageSecond}
        );
    </insert>

    <select id="writerName" resultMap="writerName">
        SELECT
        A.USER_NAME
        FROM TBL_USER A
        JOIN TBL_POST B ON B.POST_WRITER = A.USER_NO
        JOIN TBL_LEVEL C ON A.LEVEL_NO = C.LEVEL_NO
        WHERE A.USER_NO = #{userNo}
    </select>



    <select id="getMaxPostNo" resultType="int">
        SELECT
        MAX(POST_NO)
        FROM TBL_POST
    </select>

    <select id="findNickName"   resultMap="mypageResultMap" >
        SELECT USER_NAME
        FROM TBL_USER
        WHERE USER_NO= #{userNo}
    </select>

    <!-- 유저 레벨 업데이트하기 -->
    <update id="updateUserLevel" parameterType="map">
        UPDATE TBL_USER
        SET LEVEL_NO = #{levelNo}
        WHERE USER_NO = #{userNo}
    </update>

    <!-- 유저의 출석 수 가져오기 -->
    <select id="getUserAttendanceCount" parameterType="int" resultType="Integer">
        SELECT IFNULL(CHECK_ALL_NO, 0)
        FROM TBL_USER
        WHERE USER_NO = #{userNo}
    </select>

    <!-- 레벨마다 이름 가져오기 -->
    <select id="getLevelName" parameterType="int" resultType="string">
        SELECT LEVEL
        FROM TBL_LEVEL
        WHERE LEVEL_NO = #{levelNo}
    </select>

    <select id="searchPost" resultMap="postList" parameterType="string">
        SELECT
        POST_NO,
        POST_TITLE,
        POST_CATEGORY,
        POST_DATE,
        SCARY_NUMBER,
        COMMENTS_NUMBER,
        POST_FAVORITE
        FROM TBL_POST
        WHERE POST_TITLE LIKE #{keyword}
        ORDER BY POST_NO;
    </select>

    <!-- 댓글 저장 -->
    <insert id="insertComment">
        INSERT INTO TBL_COMMENT
                (COMMENT_CONTENT,
                USER_NO,
                COMMENT_DATE,
                POST_NO)
        VALUES
                (#{commentContent},
                #{userNo},
                NOW(),
                #{postNo})
    </insert>

    <!-- 특정 게시물의 댓글 목록 조회 -->
    <select id="selectCommentsByPostNo" resultMap="commentResultMap">
        SELECT
        C.COMMENT_NO,
        C.COMMENT_CONTENT,
        C.COMMENT_DATE,
        U.USER_NAME AS USER_NAME,
        L.LEVEL AS LEVEL
        FROM
        TBL_COMMENT C
        JOIN TBL_USER U ON C.USER_NO = U.USER_NO
        LEFT JOIN TBL_LEVEL L ON U.LEVEL_NO = L.LEVEL_NO
        WHERE
        C.POST_NO = #{postNo}
        ORDER BY
        C.COMMENT_DATE ASC
    </select>

    <update id="incrementCommentCount">
        UPDATE TBL_POST
        SET COMMENTS_NUMBER = COMMENTS_NUMBER + 1
        WHERE POST_NO = #{postNo}
    </update>



</mapper>